service: docsend-parser

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:AWS_REGION, 'us-east-1'}
  memorySize: 3008
  timeout: 900
  environment:
    NODE_ENV: production
    SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    SLACK_APP_TOKEN: ${env:SLACK_APP_TOKEN}
    DOCSEND_VIEWER_EMAIL: ${env:DOCSEND_VIEWER_EMAIL}
    DOCSEND_EMAIL_PROVIDER: ${env:DOCSEND_EMAIL_PROVIDER, 'gmail'}
    EMAIL_INBOX_CREDENTIALS: ${env:EMAIL_INBOX_CREDENTIALS}
    AWS_REGION: ${env:AWS_REGION, 'us-east-1'}
    KMS_KEY_ID: ${env:KMS_KEY_ID}
    S3_BUCKET: ${env:S3_BUCKET}
    PROXY_URL: ${env:PROXY_URL, ''}
    MAX_CONCURRENT_JOBS: ${env:MAX_CONCURRENT_JOBS, '3'}
    USER_COOLDOWN_SECONDS: ${env:USER_COOLDOWN_SECONDS, '60'}
    MAX_PAGES: ${env:MAX_PAGES, '300'}
    TIMEOUT_SECONDS: ${env:TIMEOUT_SECONDS, '600'}
    PDF_PAGE_SIZE: ${env:PDF_PAGE_SIZE, 'A4'}
    PDF_DPI: ${env:PDF_DPI, '150'}
    PDF_COMPRESSION_QUALITY: ${env:PDF_COMPRESSION_QUALITY, '90'}
    OTP_TIMEOUT_SECONDS: ${env:OTP_TIMEOUT_SECONDS, '60'}
    OTP_POLL_INTERVAL_MS: ${env:OTP_POLL_INTERVAL_MS, '2000'}
    LOG_LEVEL: ${env:LOG_LEVEL, 'info'}
    LOG_FORMAT: ${env:LOG_FORMAT, 'json'}
    ENCRYPTION_KEY: ${env:ENCRYPTION_KEY}
    ALLOWED_CHANNELS: ${env:ALLOWED_CHANNELS, ''}
    ALLOWED_USERS: ${env:ALLOWED_USERS, ''}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
          Resource: 
            - "arn:aws:s3:::${env:S3_BUCKET}/*"
        - Effect: Allow
          Action:
            - kms:Decrypt
            - kms:GenerateDataKey
          Resource: 
            - "arn:aws:kms:${env:AWS_REGION, 'us-east-1'}:*:key/${env:KMS_KEY_ID}"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

functions:
  docsend-bot:
    handler: src/handlers/slack.handler
    events:
      - http:
          path: /slack/events
          method: post
          cors: true
      - http:
          path: /slack/commands
          method: post
          cors: true
      - http:
          path: /health
          method: get
          cors: true
    layers:
      - Ref: PlaywrightLayer
    reservedConcurrency: 3

  # Separate function for processing jobs (optional)
  job-processor:
    handler: src/handlers/jobProcessor.handler
    events:
      - sqs:
          arn: !GetAtt JobQueue.Arn
          batchSize: 1
    reservedConcurrency: 5
    timeout: 900

resources:
  Resources:
    # SQS Queue for job processing
    JobQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-jobs-${sls:stage}
        VisibilityTimeoutSeconds: 900
        MessageRetentionPeriod: 1209600
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt JobDLQ.Arn
          maxReceiveCount: 3

    JobDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-jobs-dlq-${sls:stage}
        MessageRetentionPeriod: 1209600

    # S3 Bucket for large PDFs
    DocSendBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:S3_BUCKET, 'docsend-parser-pdfs'}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        LifecycleConfiguration:
          Rules:
            - Id: DeleteOldPDFs
              Status: Enabled
              ExpirationInDays: 1

    # CloudWatch Log Group
    LogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/${self:service}-${sls:stage}
        RetentionInDays: 14

  Outputs:
    ApiGatewayUrl:
      Description: "API Gateway endpoint URL"
      Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${sls:stage}"
    JobQueueUrl:
      Description: "SQS Queue URL for job processing"
      Value: !Ref JobQueue
    S3BucketName:
      Description: "S3 Bucket for PDF storage"
      Value: !Ref DocSendBucket

layers:
  PlaywrightLayer:
    path: .layers/playwright
    description: "Playwright browser binaries for headless Chrome"
    compatibleRuntimes:
      - nodejs18.x 